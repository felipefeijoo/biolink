#summary How to bootstrap a BioLink installation using Windows Authentication
#labels Phase-Support

= Introduction =

== The problem ==

If, when SQL Server is installed, Windows Authentication is selected, rather than SQL Server (or mixed mode) authentication, the Windows user is able to log into BioLink, but is unable to make modifications to the data in BioLink as they lack the requisite permissions.

This problem with the BioLink permissions system is a consequence of the legacy design of the original BioLink, and changes to the default way that SQL Server wants to authenticate users. Using 'Windows Authentication' (sometimes called 'NT Authentication') is more convenient, because you don't need to remember a different password for Biolink, however, in order for your account to have privileges, a BioLink user of the name as your Windows user name must exist, and and have permissions attached it. The problem arises because only a certain class of (privileged) BioLink users can create other BioLink users, and so in a single user install there is a bootstrapping problem (chicken or the egg). It was originally planned that the bootstrapping problem would be solved as part of the 3.0 redevelopment, but it has proved more difficult than expected, so the fallback solution is to make use of the SQL Server authentication mode and the 'sa' account to create an initial privileged BioLink user. 

SQL Server has two modes of authentication - so called 'Windows (or NT) Authentication' and 'SQL Server Authentication' (sometimes also known as "mixed mode"). Windows Authentication is employed when the credentials you supply when you log on to Windows are automatically used to authenticate against the SQL Server, and is the preferred mode. 'SQL Server mode'  (or mixed mode) is where SQL Server manages a separate username and password for each person using SQL Server. When using mixed mode authentication, SQL Server defines a special user 'sa' (short for system administrator') that has unrestricted access to the SQL Server, and therefore can pose a security risk should the 'sa' password become compromised. For this reason, in later versions of SQL Server, both mixed mode and the 'sa' account are disabled by default. 

When installing SQL Server the user is presented the option of enabling SQL Server authentication (and supplying an 'sa' password), but the default settings are to leave it disabled. It is possible, however, to enable mixed mode authentication, and enable the sa account, after the installation has completed.

Once enabled, the sa account can be used to log into BioLink - Within BioLink, the 'sa' user is treated specially, in that it has unfettered access to all functions of BioLink. Once logged in as 'sa' you can create a BioLink user with the same name as your Windows username, apply the appropriate permissions, and then disable mixed mode and the sa account (should you so desire). If you give your BioLink user administrative privileges within BioLink, that BioLink user can then be used to create other BioLink users.

Below is a step by step guide on how to do this

== The solution (workaround) ==

This guide will show you how to 

 * Enable SQL Server authentication
 * Enable the SQL Server 'sa' account
 * Create a privileged Biolink user (as 'sa')
 
=== Enable SQL Server Authentication (mixed mode) ===

1. Start the SQL Server Management Console, and connect to the SQL Server instance on which you BioLink database resides

[bootstrap_image1.png]


